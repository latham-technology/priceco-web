name: Deploy to development

on:
  push:
    branches:
      - 'develop'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock"]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json"]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: .output
          key: ${{ runner.os }}-nuxt-build-${{ hashFiles('dist') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-build-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build Nuxt
        run: ${{ steps.detect-package-manager.outputs.manager }} run build

      - name: Deploy to Cloudflare Workers (production)
        uses: cloudflare/wrangler-action@2.0.0
        if: github.ref == 'refs/heads/master'
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}

      - name: Deploy to Cloudflare Workers (development)
        uses: cloudflare/wrangler-action@2.0.0
        if: github.ref == 'refs/heads/develop'
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
        env:
          NODE_ENV: development
