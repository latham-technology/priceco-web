name: Build and Deploy Docker Image

on:
    workflow_dispatch:
    push:
        branches: ['main']

jobs:
    build_and_deploy:
        name: Build and deploy production
        runs-on: ubuntu-latest

        steps:
            - name: Ping job start
              uses: tsickert/discord-webhook@v6.0.0
              with:
                  username: ${{ github.event.repository.name }}
                  webhook-url: ${{ secrets.ORG_DISCORD_WEBHOOK_URL }}
                  embed-title: 'Production build for branch `${{ github.ref_name }}` has started'

            - name: Check out repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Preset Image Name
              run: echo "IMAGE_URL=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}" >> $GITHUB_ENV

            - name: Set short SHA
              id: sha
              run: echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7 | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

            - name: Build and push Docker Image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: |
                      ${{ env.IMAGE_URL }}:${{ steps.sha.outputs.sha_short }}
                      ${{ env.IMAGE_URL }}:latest
                  build-args: |
                      SENTRY_DSN=${{ vars.SENTRY_DSN }}
                      SENTRY_ORG=${{ vars.SENTRY_ORG }}
                      SENTRY_PROJECT=${{ vars.SENTRY_PROJECT }}
                      SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
                      NUXT_PUBLIC_STRAPI_URL=${{ vars.NUXT_PUBLIC_STRAPI_URL }}
                      NUXT_PUBLIC_SITE_URL=${{ vars.NUXT_PUBLIC_SITE_URL }}
                      NUXT_MAILGUN_API_KEY=${{ secrets.NUXT_MAILGUN_API_KEY }}
                      NUXT_TURNSTILE_SECRET_KEY=${{ secrets.NUXT_TURNSTILE_SECRET_KEY }}
                      SENTRY_RELEASE_NAME=${{ steps.sha.outputs.sha_short }}

    ping_build_result_success:
        runs-on: ubuntu-latest
        needs: [build_and_deploy]
        if: ${{ contains(needs.*.result, 'success') }}
        steps:
            - name: Ping job end with success
              uses: tsickert/discord-webhook@v6.0.0
              with:
                  username: ${{ github.event.repository.name }}
                  webhook-url: ${{ secrets.ORG_DISCORD_WEBHOOK_URL }}
                  embed-title: 'Production build for branch `${{ github.ref_name }}` has finished'

            - name: Deploy to Coolify
              run: |
                  curl --request GET '${{ secrets.COOLIFY_WEBHOOK }}' --header 'Authorization: Bearer ${{ secrets.ORG_COOLIFY_TOKEN }}'

    ping_build_result_failure:
        runs-on: ubuntu-latest
        needs: [build_and_deploy]
        if: ${{ contains(needs.*.result, 'failure') }}
        steps:
            - name: Ping job end with failure
              uses: tsickert/discord-webhook@v6.0.0
              with:
                  username: ${{ github.event.repository.name }}
                  webhook-url: ${{ secrets.ORG_DISCORD_WEBHOOK_URL }}
                  embed-title: 'Production build for branch `${{ github.ref_name }}` has failed'
